{
	"info": {
		"_postman_id": "ded05e74-c5f7-4819-800a-facb2f645c94",
		"name": "Ecom",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "UI",
			"item": [
				{
					"name": "react",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GraphQL",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "api",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "postman",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/postman",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"postman"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Posts",
			"item": [
				{
					"name": "Posts",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\n  posts {\r\n    id\r\n    __typename\r\n    author\r\n    body\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:4000/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post id",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\n post(id: 0){\r\n    id\r\n    __typename\r\n    author\r\n    body\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:4000/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Posts post-id",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\n  posts {\r\n    id\r\n    __typename\r\n    author\r\n    body\r\n  }\r\n  post(id: 0){\r\n    id\r\n    __typename\r\n    author\r\n    body\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:4000/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Customers",
			"item": [
				{
					"name": "customers",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\r\n  customers{\r\n    id\r\n    name\r\n    rating\r\n    producer\r\n    __typename\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:3000/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "customer id",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  customer(id: \"5f94615e44eab33670937124\") {\r\n    id\r\n    name\r\n    producer\r\n    rating\r\n    __typename\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:3000/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "add Customer",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\r\n  addCustomer(name: \"movie name 3\", producer: \"pritam\", rating: 8.5) {\r\n    id\r\n    name\r\n    producer\r\n    rating\r\n  }\r\n}\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:3000/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "update Customer",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\r\n  updateCustomer(\r\n    id: \"5fa296304a742b2bc80eab28\"\r\n    name: \"movie edit\"\r\n    producer: \"pritam khose\"\r\n    rating: 8.56\r\n  ) {\r\n    id\r\n    name\r\n    producer\r\n    rating\r\n  }\r\n}\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:3000/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete Customer",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\r\n  deleteCustomer(id:\"5f9467cc4ad50a1cc0471f16\")\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:3000/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "auth social",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\" : \"pritamkhose@gmail.com\",\r\n    \"info\" : {\r\n        \"name\" :\"pritamkhose\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/auth/social",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"auth",
								"social"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Mongo client",
			"item": [
				{
					"name": "http://localhost:3000/api/mongoclient?collection=productmyntra",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"search\": {\r\n        \"brand\": \"ADIDAS\"\r\n    },\r\n    \"projection\": {\r\n        \"_id\": 0,\r\n        \"productId\": 1,\r\n        \"product\": 1\r\n    },\r\n    \"sort\": {\r\n        \"_id\": 1\r\n    },\r\n    \"limit\": 10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/mongoclient?collection=productmyntra",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"mongoclient"
							],
							"query": [
								{
									"key": "collection",
									"value": "productmyntra"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "By id",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/mongoclient/id?collection=productmyntra&id=5fb0cedb70dc841e94384f1b",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"mongoclient",
								"id"
							],
							"query": [
								{
									"key": "collection",
									"value": "productmyntra"
								},
								{
									"key": "id",
									"value": "5fb0cedb70dc841e94384f1b"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update cart",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cart\": [\r\n        {\r\n            \"_id\": \"5fb0cedb70dc841e94384f1d\",\r\n            \"productId\": 12031744,\r\n            \"product\": \"ADIDAS Men Black Pictoris Running Shoes\",\r\n            \"rating\": 4.928571,\r\n            \"brand\": \"ADIDAS\",\r\n            \"searchImage\": \"http://assets.myntassets.com/assets/images/12031744/2020/10/13/6ce41e63-3066-445a-8a11-806febd0c89e1602564660571-ADIDAS-Men-Sports-Shoes-9701602564658426-1.jpg\",\r\n            \"mrp\": 3799,\r\n            \"price\": 3419,\r\n            \"qty\": 6\r\n        },\r\n        {\r\n            \"_id\": \"5fb0cedb70dc841e94384f1b\",\r\n            \"productId\": 11353478,\r\n            \"product\": \"ADIDAS Men Red & White Easy Vulcanised 2.0 Skateboarding Shoes\",\r\n            \"rating\": 0,\r\n            \"brand\": \"ADIDAS\",\r\n            \"searchImage\": \"http://assets.myntassets.com/assets/images/11353478/2020/10/14/b0e64a1b-ee1e-41ab-8731-9d59e89426b31602668556236-ADIDAS-Men-Casual-Shoes-7231602668554631-1.jpg\",\r\n            \"mrp\": 3999,\r\n            \"price\": 3599,\r\n            \"qty\": 1\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/mongoclient/updateone?collection=cart&id=5fc5fc33b659c728ccba4b43",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"mongoclient",
								"updateone"
							],
							"query": [
								{
									"key": "collection",
									"value": "cart"
								},
								{
									"key": "id",
									"value": "5fc5fc33b659c728ccba4b43"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateone",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"atype\": \"Home\",\r\n  \"city\": \"Ahmednagar\",\r\n  \"firstName\": \"Priyanka\",\r\n  \"lastName\": \"Khose\",\r\n  \"mobileno\": \"8421365845\",\r\n  \"address\": \"42, Ambikanagar, Kedgaon Ahmednagar Maharashtra 414005\",\r\n  \"area\": \"Chch\",\r\n  \"country\": \"India\",\r\n  \"pincode\": \"414005\",\r\n  \"state\": \"MAHARASHTRA\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/mongoclient/updateone?collection=address&id=5fb277be6625c10055afc5b9",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"mongoclient",
								"updateone"
							],
							"query": [
								{
									"key": "collection",
									"value": "address"
								},
								{
									"key": "id",
									"value": "5fb277be6625c10055afc5b9"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get address id",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"search\": {\r\n        \"uid\": \"5fb277be6625c10055afc5b9\",\r\n        \"addrid\": \"pfadttpsr\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/mongoclient?collection=address",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"mongoclient"
							],
							"query": [
								{
									"key": "collection",
									"value": "address"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete by id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/mongoclient/delete?collection=address&id=5fd5f9c0ff28d237bc433b2a",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"mongoclient",
								"delete"
							],
							"query": [
								{
									"key": "collection",
									"value": "address"
								},
								{
									"key": "id",
									"value": "5fd5f9c0ff28d237bc433b2a"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "7fd16c43-8d7b-4cab-bfac-89952b1b7454",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "2f3a2dce-b99a-48a2-a372-a50313adaef7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "orders",
			"item": [
				{
					"name": "http://localhost:3000/api/razorpay/payment/orders",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"amount\": \"10100\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/razorpay/payment/orders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"razorpay",
								"payment",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "http://localhost:3000/api/razorpay/payment/success",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/razorpay/payment/success",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"razorpay",
								"payment",
								"success"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Razorpay",
			"item": [
				{
					"name": "Fetch Orders",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "0vFjiVy7REfZMW4m7oCDC2dB",
									"type": "string"
								},
								{
									"key": "username",
									"value": "rzp_test_piBaUtLnjBNwoK",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.razorpay.com/v1/orders?count=100&skip=0",
							"protocol": "https",
							"host": [
								"api",
								"razorpay",
								"com"
							],
							"path": [
								"v1",
								"orders"
							],
							"query": [
								{
									"key": "count",
									"value": "100"
								},
								{
									"key": "skip",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch Orders by ID",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "0vFjiVy7REfZMW4m7oCDC2dB",
									"type": "string"
								},
								{
									"key": "username",
									"value": "rzp_test_piBaUtLnjBNwoK",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.razorpay.com/v1/orders/order_G9gyYlxDOEvM3R",
							"protocol": "https",
							"host": [
								"api",
								"razorpay",
								"com"
							],
							"path": [
								"v1",
								"orders",
								"order_G9gyYlxDOEvM3R"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch Payments by Order",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "0vFjiVy7REfZMW4m7oCDC2dB",
									"type": "string"
								},
								{
									"key": "username",
									"value": "rzp_test_piBaUtLnjBNwoK",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.razorpay.com/v1/orders/order_G9gyYlxDOEvM3R/payments",
							"protocol": "https",
							"host": [
								"api",
								"razorpay",
								"com"
							],
							"path": [
								"v1",
								"orders",
								"order_G9gyYlxDOEvM3R",
								"payments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\": 1000000,\n  \"currency\": \"INR\",\n  \"receipt\": \"Receipt no. 1\",\n  \"payment_capture\": 1,\n  \"notes\": {\n    \"notes_key_1\": \"Tea, Earl Grey, Hot\",\n    \"notes_key_2\": \"Tea, Earl Grey… decaf.\"\n  }\n}"
						},
						"url": {
							"raw": "https://api.razorpay.com/v1/orders",
							"protocol": "https",
							"host": [
								"api",
								"razorpay",
								"com"
							],
							"path": [
								"v1",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Order",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"notes\": {\n    \"notes_key_1\": \"Beam me up Scotty\",\n    \"notes_key_2\": \"Engage\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.razorpay.com/v1/orders/{order_id}",
							"protocol": "https",
							"host": [
								"api",
								"razorpay",
								"com"
							],
							"path": [
								"v1",
								"orders",
								"{order_id}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "all",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\r\n  posts {\r\n    author,\r\n    body,\r\n    id\r\n    __typename\r\n  },\r\n  customers {\r\n    id\r\n    name\r\n    producer\r\n    rating\r\n    __typename\r\n  }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}